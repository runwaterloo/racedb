# The following variables need to be setup in GitLab under Settings | CI / CD | Variables
# GITLAB_CI_USER        (GitLab access token name)
# GITLAB_CI_TOKEN       (GitLab access token)
# AWS_ACCESS_KEY_ID     (AWS access key for S3)
# AWS_SECRET_ACCESS_KEY (AWS secret access key for S3)
# RACEDB_DB_BACKUP      (location of backup s3://...)
# PERSONAL_ACCESS_TOKEN (Gitlab personal access token)
# NOTIFYKEY             (RRW key to accept notifications)

stages:
  - default
  - integration-test
  - tag-commit
  - update-dependencies

test:
  stage: default
  image: python:3.13.2-alpine3.21
  rules:
    - if: '$UPDATE_DEPENDENCIES == "true"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_TAG'    # tag exists (non-empty)
      when: never
    - when: always
  script:
    - cp racedb/secrets.py.sample racedb/secrets.py
    - grep -v '^mysqlclient' requirements.txt > requirements-test.txt
    - pip install --root-user-action=ignore -r requirements-test.txt
    - pytest --junitxml=report.xml --cov=racedbapp --cov-report=term --cov-report=xml
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    reports:
      junit: report.xml
    expire_in: 1 week

image-build-push-tag:
  stage: default
  image: docker:28.2.2
  rules:
    - if: '$UPDATE_DEPENDENCIES == "true"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_TAG'    # tag exists (non-empty)
      when: never
    - when: always
  services:
    - docker:dind
  script:
    - export VERSION="1.$(TZ=America/Toronto date +'%y%m%d').$CI_PIPELINE_IID"
    - echo "export VERSION=$VERSION" >> version.env
    - sh deploy/gitlab/build-image.sh
    # exit here if not main, and [push dev] not present
    - if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ] && ! echo "$CI_COMMIT_MESSAGE" | grep -q '\[push dev\]'; then exit 0; fi
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    # exit here if not main
    - if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then exit 0; fi
    - apk add curl git tzdata -f
    - sh deploy/gitlab/tag-image.sh
  artifacts:
    paths:
      - version.env

integration-test:
  stage: integration-test
  rules:
    - if: '$UPDATE_DEPENDENCIES == "true"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /\[full ci\]/i'
      when: on_success
  image: docker:28.2.2
  services:
    - docker:dind
    - mariadb:10.11.9
  variables:
    MYSQL_DATABASE: racedb
    MYSQL_USER: racedb
    MYSQL_PASSWORD: CHANGEME
    MYSQL_ROOT_PASSWORD: CHANGEME
  script:
    - sh deploy/gitlab/build.sh
    - sh deploy/gitlab/integration-test.sh
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    reports:
      junit: report.xml
    expire_in: 1 week

tag-commit:
  stage: tag-commit
  image: alpine/git:2.49.0
  entrypoint: ["/bin/sh", "-c"]
  dependencies:
    - image-build-push-tag
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      when: never
    - if: '$UPDATE_DEPENDENCIES == "true"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always
  script:
    - source version.env
    - git tag ${VERSION}
    - git remote set-url origin ${CI_PROJECT_URL/gitlab.com/oauth2:${DEPUP_TOKEN}@gitlab.com}.git
    - git push --tags

update-dependencies:
  stage: update-dependencies
  image: python:latest
  rules:
    - if: '$UPDATE_DEPENDENCIES == "true"'
  script:
    - ./update-dependencies.sh
