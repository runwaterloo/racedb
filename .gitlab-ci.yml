# The following variables need to be setup in GitLab under Settings | CI / CD | Variables
# GITLAB_CI_USER        (GitLab access token name)
# GITLAB_CI_TOKEN       (GitLab access token)
# AWS_ACCESS_KEY_ID     (AWS access key for S3)
# AWS_SECRET_ACCESS_KEY (AWS secret access key for S3)
# RACEDB_DB_BACKUP      (location of backup s3://...)

image: docker:latest

stages:
  - build
  - test
  - deploy

before_script:
  - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_TOKEN $CI_REGISTRY

build:
  except:
    variables:
      - $DEPLOY_ONLY == "true"
  services:
    - docker:dind
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker buildx create --use
    - docker buildx build --platform linux/arm64/v8,linux/amd64 --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

test:
  except:
    variables:
      - $DEPLOY_ONLY == "true"
  stage: test
  services:
    - docker:dind
    - mariadb:10.3.23
  variables:
    MYSQL_DATABASE: racedb
    MYSQL_USER: racedb
    MYSQL_PASSWORD: CHANGEME
    MYSQL_ROOT_PASSWORD: CHANGEME
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - /bin/ash deploy/minimal/deploy.sh
    - docker exec racedb_gunicorn ./manage.py test --settings=racedb.settings.min
  retry: 2

tag-latest:
  only:
    refs:
      - main
  except:
    variables:
      - $DEPLOY_ONLY == "true"
  stage: deploy
  services:
    - docker:dind
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:main-$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:main-$CI_COMMIT_SHORT_SHA
