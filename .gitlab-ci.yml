# The following variables need to be setup in GitLab under Settings | CI / CD | Variables
# DEPLOY_TARGET         (default productin server to deploy to)
# GITLAB_CI_RUNNER_USER (user name for the CI runner account)
# GITLAB_CI_RUNNER_KEY  (ssh private key for the CI runner account)
# GITLAB_CI_USER        (GitLab access token name)
# GITLAB_CI_TOKEN       (GitLab access token)

stages:
  - build
  - deploy

build:
  only:
    refs:
      - master
  except:
    variables:
      - $DEPLOY_ONLY == "true"
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_TOKEN $CI_REGISTRY 
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

deploy:
  only:
    refs:
      - master
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$GITLAB_CI_RUNNER_KEY" | tr -d '\r' | ssh-add - 
  script:
    - sed -i s/racedb:latest/racedb:$CI_COMMIT_SHORT_SHA/g racedb-stack.yml
    - scp -o StrictHostKeyChecking=no racedb-stack.yml $GITLAB_CI_RUNNER_USER@$DEPLOY_TARGET:/srv/
    - ssh -o StrictHostKeyChecking=no $GITLAB_CI_RUNNER_USER@$DEPLOY_TARGET "docker pull registry.gitlab.com/sl70176/racedb:$CI_COMMIT_SHORT_SHA"
    - ssh -o StrictHostKeyChecking=no $GITLAB_CI_RUNNER_USER@$DEPLOY_TARGET "docker stack deploy -c /srv/racedb-stack.yml racedb"
