# The following variables need to be setup in GitLab under Settings | CI / CD | Variables
# GITLAB_CI_USER        (GitLab access token name)
# GITLAB_CI_TOKEN       (GitLab access token)
# AWS_ACCESS_KEY_ID     (AWS access key for S3)
# AWS_SECRET_ACCESS_KEY (AWS secret access key for S3)
# RACEDB_DB_BACKUP      (location of backup s3://...)
# PERSONAL_ACCESS_TOKEN (Gitlab personal access token)

stages:
  - build-test-push
  - deploy-to-dev # optional,
  - tag
  - deploy

build-test-push:
  stage: build-test-push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_TAG !~ /^v.*/'
  image: docker:latest
  services:
    - docker:dind
    - mariadb:10.4.22
  variables:
    MYSQL_DATABASE: racedb
    MYSQL_USER: racedb
    MYSQL_PASSWORD: CHANGEME
    MYSQL_ROOT_PASSWORD: CHANGEME
  script:
    - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - /bin/ash deploy/minimal/deploy.sh
    - docker exec racedb_gunicorn ./manage.py test --settings=racedb.settings.min
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  retry: 2

deploy-to-dev:
  stage: deploy-to-dev
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG !~ /^v.*/'
  when: manual
  script:
    - cd deploy/helm
    - sh ./install_helm.sh
    - echo "$KUBECONFIG" > /kubeconfig
    - export KUBECONFIG=/kubeconfig
    - /usr/local/bin/helm upgrade racedbdev . --values values-racedb.yaml --set image.tag="${CI_COMMIT_SHORT_SHA}" --wait

tag:
  stage: tag
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG !~ /^v.*/'
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_TOKEN $CI_REGISTRY
    - export VERSION=`cat version.txt | xargs`
    - sh deploy/gitlab/tag.sh

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - cd deploy/helm
    - sh ./install_helm.sh
    - echo "$KUBECONFIG" > /kubeconfig
    - export KUBECONFIG=/kubeconfig
    - /usr/local/bin/helm upgrade racedb . --values values-rrw.yaml --set image.tag="${CI_COMMIT_TAG:1}" --wait
    - /usr/local/bin/helm upgrade racedbdev . --values values-racedb.yaml --set image.tag="${CI_COMMIT_TAG:1}" --wait
