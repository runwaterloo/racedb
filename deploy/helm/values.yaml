# Default values for racedb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
racedb:
  devVolumePath: /srv/racedb
  secretsVolumePath: /srv/racedb_secrets
  celeryWorkers: 1
  # mount local filesytem into container
  mountLocal: false
  threads: 1
  workers: 1  # prometheus reporting issues with more than 1 worker
  workerClass: gthread
  storage: s3

replicaCount: 1
webReplicaCount: 1

image:
  repository: ghcr.io/runwaterloo/racedb
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "racedb"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  catchall:
    enabled: false
    hostmatch: Hostregexp(`.+`)

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  image:
    name: redis
    repository: redis
    tag: 8.0.3-alpine3.21
